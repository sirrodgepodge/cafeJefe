/*! cafeJefe 2015-09-06 */
var $purchaseToggle = $(".purchase-toggle"), $coffeeInd = $(".coffee-ind"), $buyBtn = $(".buy-btn"), $coffeePrice = $(".coffee-price"), $merchIndBack = $(".merch-ind .back"), $tShirt = $merchIndBack.children(".t-shirt"), $buyMerch = $merchIndBack.children(".buy-merch"), $size = $merchIndBack.children(".size"), $merchPrice = $(".merch-price"), $backToTop = $(".back-to-top, .title, .footer-logo"), $title = $(".title"), $contact = $(".contact"), $placeHolder = $(".place-holder"), $landing = $(".landing"), $landingHead = $landing.find(".landing-head"), $landingNotHead = $landing.find(".landing-not-head"), $landingTogglers = $landing.find(".dream, .product"), $downAnim = $landing.find(".down-anim"), $contactImg = $(".contact-img"), $contactSub = $(".contact-sub"), $contactSubInside = $contactSub.find(".contact-sub-inside"), $sizes = $(), coffee = [], merch = [], contact = {};

$.get("/api/info", function(data) {
    coffee = data.coffee, merch = data.merch, contact = data.contact;
});

var addresses = [ "6147 Lakeside Dr #102, Reno, NV 89502" ], main = function() {
    $landingTogglers.click(function() {
        var notSelImg, tempThis;
        $(this).hasClass("landing-active") || ($landingHead.hasClass("fade-out") ? ($startLandingActive = $(".landing-active"), 
        $startLandingActive.toggleClass("landing-active"), $startLandingActive.children(".full").toggleClass("show"), 
        $(this).toggleClass("landing-active"), tempThis = this, notSelImg = $(".landing-img").not(".show"), 
        $(".landing-img.show").toggleClass("show"), setTimeout(function() {
            $(tempThis).children(".full").toggleClass("show"), notSelImg.toggleClass("show");
        }, 500)) : ($landingHead.addClass("fade-out"), $(this).toggleClass("landing-active"), 
        tempThis = this, $(this).hasClass("dream") ? (notSelImg = $(".landing-img").not(".show"), 
        $(".landing-img.show").toggleClass("show"), setTimeout(function() {
            $(tempThis).children(".full").toggleClass("show"), notSelImg.toggleClass("show");
        }, 500)) : setTimeout(function() {
            $(tempThis).children(".full").toggleClass("show");
        }, 400)));
    }), $downAnim.click(function() {
        $("html, body").animate({
            scrollTop: titleTop
        }, titleTop - .8 * $(window).scrollTop());
    });
    var purchTypeVal = $(".active-purch-type").attr("id");
    $purchaseToggle.click(function() {
        $(this).hasClass("active-purch-type") || ($purchaseToggle.each(function() {
            $(this).toggleClass("active-purch-type");
        }), purchTypeVal = $(this).attr("id"), $buyBtn.find(".button-text").html(purchTypeVal.slice(0, 1).toUpperCase() + purchTypeVal.slice(1)), 
        $coffeePrice.each(function(index, val) {
            $(this).html("$" + coffee[index][purchTypeVal]);
            var currVal = $($buyBtn[index]).attr("href").slice(0, $($buyBtn[index]).attr("href").lastIndexOf("-") + 1);
            $($buyBtn[index]).attr("href", currVal + purchTypeVal);
        }));
    }), $coffeeInd.click(function() {
        $(this).hasClass("active-coffee-amount") || ($(".active-coffee-amount").toggleClass("active-coffee-amount"), 
        $(this).children(".coffee-ind-inside").toggleClass("active-coffee-amount"));
    }), $size.mouseenter(function() {
        $(this).parent().children(".t-shirt").first().attr("data-size", $(this).text()), 
        $(this).hasClass("active") || ($(this).parent().children(".size.active").toggleClass("active"), 
        $(this).toggleClass("active"));
        var buyMerchBtn = $(this).parent().children(".buy-merch").first();
        buyMerchBtn.attr("href", buyMerchBtn.attr("href").slice(0, buyMerchBtn.attr("href").lastIndexOf("_") + 1) + $(this).text());
    });
    var slideSwitchText = function(val) {
        $contactSubInside.toggleClass("show"), setTimeout(function() {
            $contactSubInside.text(val), $contactSubInside.toggleClass("show"), $contactSub.innerWidth($contactSubInside.width());
        }, 525);
    };
    $contactSub.innerWidth($contactSubInside.width()), $contactImg.mouseenter(function() {
        var selected = $(this).attr("class").split(" ")[1];
        $contactSubInside.text() !== contact[selected].text && ($contactSub.attr("href", contact[selected].link), 
        !!contact[selected].link === $contactSub.hasClass("disable-link") && $contactSub.toggleClass("disable-link"), 
        slideSwitchText(contact[selected].text));
    }), $backToTop.click(function() {
        $("html, body").animate({
            scrollTop: 0
        }, .6 * $(window).scrollTop());
    });
}, mapLoad = function(addresses) {
    $.getJSON("//maps.googleapis.com/maps/api/geocode/json?address=" + addresses[0] + "&sensor=false", null, function(centerData) {
        var map, centerCoord = centerData.results[0].geometry.location, mapOptions = {
            center: new google.maps.LatLng(centerCoord.lat, centerCoord.lng),
            mapTypeId: google.maps.MapTypeId.TERRAIN,
            styles: [ {
                stylers: [ {
                    saturation: -100
                }, {
                    lightness: 0
                }, {
                    gamma: .5
                } ]
            } ],
            zoom: 15,
            scrollwheel: !1,
            draggable: !0
        };
        map = new google.maps.Map($("#map")[0], mapOptions);
        var bounds = new google.maps.LatLngBounds();
        addresses.forEach(function(val, index) {
            $.getJSON("//maps.googleapis.com/maps/api/geocode/json?address=" + val + "&sensor=false", null, function(data) {
                var p = data.results[0].geometry.location, latlng = new google.maps.LatLng(p.lat, p.lng);
                bounds.extend(latlng);
                var marker = new google.maps.Marker({
                    position: latlng,
                    map: map,
                    icon: "images/Marker_Mask.png"
                }), infowindow = new google.maps.InfoWindow({
                    content: '<p class="marker-caption">' + val + "</p>"
                });
                google.maps.event.addListener(marker, "click", function() {
                    infowindow.open(map, marker);
                }), google.maps.event.addListener(infowindow, "closeclick", function() {
                    map.setCenter(marker.getPosition());
                }), index > 0 && map.fitBounds(bounds);
            });
        });
    });
}, titleTop = Math.ceil($landing.outerHeight()), contactTop = .92 * Math.ceil($contact.offset().top), downAnimReached = .395 * titleTop + 4.5, listeners = function() {
    var pagePos = 0, titleFixed = !1, landingHeadDimmed = !1, topTextShowing = !0, contactPopped = !1, landingScroll = function() {
        pagePos = window.pageYOffset, (pagePos >= titleTop && !titleFixed || titleTop > pagePos && titleFixed) && ($title.toggleClass("sticky"), 
        $placeHolder.toggleClass("no-show"), titleFixed = !titleFixed), (pagePos >= contactTop && !contactPopped || contactTop > pagePos && contactPopped) && ($contact.toggleClass("poppin"), 
        contactPopped = !contactPopped), (pagePos >= downAnimReached && !landingHeadDimmed || downAnimReached > pagePos && landingHeadDimmed) && ($landingHead.toggleClass("dim"), 
        landingHeadDimmed = !landingHeadDimmed), downAnimReached > pagePos && !topTextShowing && (topTextShowing = !0), 
        0 === pagePos ? $landingNotHead.add($downAnim).css("opacity", 1) : pagePos >= downAnimReached && topTextShowing ? $landingNotHead.add($downAnim).css("opacity", +(topTextShowing = !1)) : pagePos > 0 && downAnimReached > pagePos && $landingNotHead.add($downAnim).css("opacity", 1 - pagePos / downAnimReached);
    };
    landingScroll(), $(window).resize(function() {
        titleTop = Math.ceil($landing.outerHeight()), downAnimReached = .395 * titleTop + 4.5, 
        contactTop = .92 * Math.ceil($contact.offset().top), landingScroll();
    }), window.addEventListener("scroll", landingScroll);
};

$(document).ready(main, mapLoad(addresses), listeners());